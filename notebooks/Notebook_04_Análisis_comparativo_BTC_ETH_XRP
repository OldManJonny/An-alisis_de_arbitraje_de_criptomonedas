{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPvb4X2HZCaN1fsvouZmvbT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Análisis comparativo entre BTC, ETH y XRP"],"metadata":{"id":"QeV3haE_prsk"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"dCCyjkOSpKO1","executionInfo":{"status":"ok","timestamp":1744832549554,"user_tz":360,"elapsed":8341,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import plotly.express as px\n","import plotly.graph_objects as go\n","from plotly.subplots import make_subplots\n","import os\n","from google.colab import drive"]},{"cell_type":"code","source":["drive.mount('/content/drive')"],"metadata":{"id":"4NRANy0itqZQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744832623107,"user_tz":360,"elapsed":17097,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}},"outputId":"e26b6ccd-408c-4fab-b278-ae409ac38855"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["plt.style.use('seaborn-v0_8-whitegrid')\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.width', 200)\n","sns.set(style=\"whitegrid\")"],"metadata":{"id":"kBtYIliFtroA","executionInfo":{"status":"ok","timestamp":1744832740612,"user_tz":360,"elapsed":4,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Definir rutas base en Google Drive\n","BASE_PATH = '/content/drive/My Drive/Cripto/Proyecto_Exchange/Blockchain'"],"metadata":{"id":"oVTP2hXCttZ3","executionInfo":{"status":"ok","timestamp":1744832741603,"user_tz":360,"elapsed":2,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Crear carpetas para resultados\n","os.makedirs('visualizations/comparative', exist_ok=True)\n","os.makedirs('data/comparative', exist_ok=True)\n","\n","print(\"Iniciando análisis comparativo entre BTC, ETH y XRP...\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NqtjsSaJGxrj","executionInfo":{"status":"ok","timestamp":1744832743345,"user_tz":360,"elapsed":19,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}},"outputId":"e079afef-69ed-40c4-cc71-e4f0622cc612"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Iniciando análisis comparativo entre BTC, ETH y XRP...\n"]}]},{"cell_type":"code","source":["# 1. Cargar resúmenes de arbitraje para cada criptomoneda\n","def load_arbitrage_summaries():\n","    \"\"\"Carga los resúmenes de arbitraje de cada criptomoneda desde Google Drive\"\"\"\n","    summaries = {}\n","\n","    # Definir las rutas para cada criptomoneda\n","    crypto_paths = {\n","        'BTC': f\"{BASE_PATH}/BTC/BTC_csv\",\n","        'ETH': f\"{BASE_PATH}/ETH/ETH_csv\",\n","        'XRP': f\"{BASE_PATH}/XRP/XRP_csv\"\n","    }\n","\n","    for crypto, path in crypto_paths.items():\n","        try:\n","            # Verificar que la carpeta existe\n","            if not os.path.exists(path):\n","                print(f\"Advertencia: La carpeta {path} no existe\")\n","                continue\n","\n","            # Buscar el archivo de resumen de arbitraje\n","            summary_file = os.path.join(path, f\"{crypto.lower()}_arbitrage_summary.csv\")\n","\n","            if os.path.exists(summary_file):\n","                # Cargar el resumen\n","                crypto_summary = pd.read_csv(summary_file)\n","                crypto_summary['cryptocurrency'] = crypto\n","                summaries[crypto] = crypto_summary\n","                print(f\"Resumen de {crypto} cargado: {len(crypto_summary)} pares de exchanges\")\n","            else:\n","                print(f\"Archivo de resumen no encontrado para {crypto}: {summary_file}\")\n","\n","                # Intentar buscar cualquier archivo CSV que contenga \"arbitrage_summary\"\n","                csv_files = [f for f in os.listdir(path) if f.endswith('.csv') and 'arbitrage_summary' in f]\n","                if csv_files:\n","                    alternative_file = os.path.join(path, csv_files[0])\n","                    print(f\"Encontrado archivo alternativo: {alternative_file}\")\n","                    crypto_summary = pd.read_csv(alternative_file)\n","                    crypto_summary['cryptocurrency'] = crypto\n","                    summaries[crypto] = crypto_summary\n","                    print(f\"Resumen alternativo de {crypto} cargado: {len(crypto_summary)} pares de exchanges\")\n","        except Exception as e:\n","            print(f\"Error al cargar resumen de {crypto}: {e}\")\n","\n","    return summaries"],"metadata":{"id":"Ioh48Ga2G2H4","executionInfo":{"status":"ok","timestamp":1744832746458,"user_tz":360,"elapsed":4,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# 2. Crear DataFrame comparativo\n","def create_comparative_summary(summaries):\n","    \"\"\"Combina los resúmenes en un único DataFrame comparativo\"\"\"\n","    if not summaries:\n","        print(\"No hay resúmenes para comparar\")\n","        return None\n","\n","    # Combinar todos los resúmenes\n","    all_summaries = []\n","    for crypto, summary in summaries.items():\n","        all_summaries.append(summary)\n","\n","    # Concatenar\n","    if all_summaries:\n","        # Verificar estructura de columnas\n","        for i, summary in enumerate(all_summaries):\n","            print(f\"Columnas en resumen {i+1}: {summary.columns.tolist()}\")\n","\n","        # Asegurarse de que todos tengan las mismas columnas\n","        required_cols = ['Par', 'Oportunidades', 'Porcentaje', 'Spread Promedio', 'Spread Máximo', 'cryptocurrency']\n","\n","        # Verificar y corregir nombres de columnas si es necesario\n","        for i, summary in enumerate(all_summaries):\n","            # Si faltan columnas, intentar identificarlas por tipo de dato\n","            if 'Par' not in summary.columns and any('par' in col.lower() for col in summary.columns):\n","                par_col = [col for col in summary.columns if 'par' in col.lower()][0]\n","                summary.rename(columns={par_col: 'Par'}, inplace=True)\n","\n","            if 'Oportunidades' not in summary.columns:\n","                # Buscar columna que parezca contener oportunidades (valores enteros altos)\n","                for col in summary.columns:\n","                    if col != 'Par' and col != 'cryptocurrency' and col not in ['Porcentaje', 'Spread Promedio', 'Spread Máximo']:\n","                        if summary[col].dtype in [int, np.int64, float, np.float64] and summary[col].max() > 100:\n","                            summary.rename(columns={col: 'Oportunidades'}, inplace=True)\n","                            print(f\"Renombrando columna {col} a 'Oportunidades'\")\n","                            break\n","\n","            if 'Porcentaje' not in summary.columns:\n","                for col in summary.columns:\n","                    if col not in ['Par', 'Oportunidades', 'cryptocurrency'] and col not in ['Spread Promedio', 'Spread Máximo']:\n","                        if summary[col].dtype in [float, np.float64] and summary[col].mean() < 100 and summary[col].mean() > 0:\n","                            summary.rename(columns={col: 'Porcentaje'}, inplace=True)\n","                            print(f\"Renombrando columna {col} a 'Porcentaje'\")\n","                            break\n","\n","            # Buscar las columnas de spread\n","            spread_cols = [col for col in summary.columns if 'spread' in col.lower()]\n","            if 'Spread Promedio' not in summary.columns and len(spread_cols) > 0:\n","                for col in spread_cols:\n","                    if 'mean' in col.lower() or 'promedio' in col.lower() or 'avg' in col.lower():\n","                        summary.rename(columns={col: 'Spread Promedio'}, inplace=True)\n","                        print(f\"Renombrando columna {col} a 'Spread Promedio'\")\n","                        break\n","\n","            if 'Spread Máximo' not in summary.columns and len(spread_cols) > 0:\n","                for col in spread_cols:\n","                    if 'max' in col.lower() or 'máximo' in col.lower():\n","                        summary.rename(columns={col: 'Spread Máximo'}, inplace=True)\n","                        print(f\"Renombrando columna {col} a 'Spread Máximo'\")\n","                        break\n","\n","            # Verificar si después de los intentos todavía faltan columnas requeridas\n","            missing_cols = [col for col in required_cols if col not in summary.columns and col != 'cryptocurrency']\n","            if missing_cols:\n","                print(f\"Advertencia: Faltan columnas en el resumen {i+1}: {missing_cols}\")\n","                print(f\"Columnas disponibles: {summary.columns.tolist()}\")\n","\n","            # Asegurarse de que existe la columna cryptocurrency\n","            if 'cryptocurrency' not in summary.columns:\n","                crypto = list(summaries.keys())[i]\n","                summary['cryptocurrency'] = crypto\n","                print(f\"Añadida columna 'cryptocurrency' = {crypto}\")\n","\n","            # Guardar el resumen modificado\n","            all_summaries[i] = summary\n","\n","        # Intentar concatenar\n","        try:\n","            combined = pd.concat(all_summaries, ignore_index=True)\n","            print(f\"Resumen comparativo creado con {len(combined)} filas\")\n","\n","            # Guardar resumen combinado en ambas ubicaciones\n","            # 1. En el directorio local\n","            combined.to_csv('data/comparative/combined_arbitrage_summary.csv', index=False)\n","            print(\"Resumen comparativo guardado en 'data/comparative/combined_arbitrage_summary.csv'\")\n","\n","            # 2. En Google Drive en una carpeta \"Comparative\"\n","            os.makedirs(f\"{BASE_PATH}/Comparative\", exist_ok=True)\n","            combined.to_csv(f\"{BASE_PATH}/Comparative/combined_arbitrage_summary.csv\", index=False)\n","            print(f\"Resumen comparativo guardado en Google Drive: {BASE_PATH}/Comparative/combined_arbitrage_summary.csv\")\n","\n","            return combined\n","        except Exception as e:\n","            print(f\"Error al combinar resúmenes: {e}\")\n","            return None\n","    else:\n","        print(\"No se pudieron combinar los resúmenes\")\n","        return None\n"],"metadata":{"id":"8kQ_jybZHkR2","executionInfo":{"status":"ok","timestamp":1744832749475,"user_tz":360,"elapsed":41,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# 3. Generar visualizaciones comparativas\n","def generate_comparative_visualizations(combined_summary):\n","    \"\"\"Genera visualizaciones comparativas entre las criptomonedas\"\"\"\n","    if combined_summary is None or len(combined_summary) == 0:\n","        print(\"No hay datos para generar visualizaciones\")\n","        return\n","\n","    print(\"Generando visualizaciones comparativas...\")\n","\n","    # Crear directorio para visualizaciones en Google Drive\n","    drive_vis_dir = f\"{BASE_PATH}/Comparative/Visualizations\"\n","    os.makedirs(drive_vis_dir, exist_ok=True)\n","\n","    # 1. Comparación de oportunidades de arbitraje por criptomoneda\n","    try:\n","        fig1 = px.bar(\n","            combined_summary,\n","            x='Par',\n","            y='Oportunidades',\n","            color='cryptocurrency',\n","            title='Oportunidades de Arbitraje por Par de Exchanges y Criptomoneda',\n","            labels={'Par': 'Par de Exchanges', 'Oportunidades': 'Número de Oportunidades'},\n","            barmode='group'\n","        )\n","\n","        # Guardar en ambas ubicaciones\n","        fig1.write_html('visualizations/comparative/arbitrage_opportunities_by_pair.html')\n","        fig1.write_html(f\"{drive_vis_dir}/arbitrage_opportunities_by_pair.html\")\n","        print(\"Visualización 1 guardada localmente y en Google Drive\")\n","    except Exception as e:\n","        print(f\"Error al generar visualización 1: {e}\")\n","\n","    # 2. Comparación de porcentaje de oportunidades\n","    try:\n","        fig2 = px.bar(\n","            combined_summary,\n","            x='Par',\n","            y='Porcentaje',\n","            color='cryptocurrency',\n","            title='Porcentaje de Tiempo con Oportunidades de Arbitraje',\n","            labels={'Par': 'Par de Exchanges', 'Porcentaje': '% del Tiempo'},\n","            barmode='group'\n","        )\n","\n","        # Guardar en ambas ubicaciones\n","        fig2.write_html('visualizations/comparative/arbitrage_percentage_by_pair.html')\n","        fig2.write_html(f\"{drive_vis_dir}/arbitrage_percentage_by_pair.html\")\n","        print(\"Visualización 2 guardada localmente y en Google Drive\")\n","    except Exception as e:\n","        print(f\"Error al generar visualización 2: {e}\")\n","\n","    # 3. Comparación de spreads promedio\n","    try:\n","        fig3 = px.bar(\n","            combined_summary,\n","            x='Par',\n","            y='Spread Promedio',\n","            color='cryptocurrency',\n","            title='Spread Promedio por Par de Exchanges y Criptomoneda',\n","            labels={'Par': 'Par de Exchanges', 'Spread Promedio': 'Spread Promedio (%)'},\n","            barmode='group'\n","        )\n","\n","        # Guardar en ambas ubicaciones\n","        fig3.write_html('visualizations/comparative/average_spread_by_pair.html')\n","        fig3.write_html(f\"{drive_vis_dir}/average_spread_by_pair.html\")\n","        print(\"Visualización 3 guardada localmente y en Google Drive\")\n","    except Exception as e:\n","        print(f\"Error al generar visualización 3: {e}\")\n","\n","    # 4. Comparación de spreads máximos\n","    try:\n","        fig4 = px.bar(\n","            combined_summary,\n","            x='Par',\n","            y='Spread Máximo',\n","            color='cryptocurrency',\n","            title='Spread Máximo por Par de Exchanges y Criptomoneda',\n","            labels={'Par': 'Par de Exchanges', 'Spread Máximo': 'Spread Máximo (%)'},\n","            barmode='group'\n","        )\n","\n","        # Guardar en ambas ubicaciones\n","        fig4.write_html('visualizations/comparative/max_spread_by_pair.html')\n","        fig4.write_html(f\"{drive_vis_dir}/max_spread_by_pair.html\")\n","        print(\"Visualización 4 guardada localmente y en Google Drive\")\n","    except Exception as e:\n","        print(f\"Error al generar visualización 4: {e}\")\n","\n","    # 5. Resumen por criptomoneda\n","    try:\n","        crypto_summary = combined_summary.groupby('cryptocurrency').agg({\n","            'Oportunidades': 'sum',\n","            'Porcentaje': 'mean',\n","            'Spread Promedio': 'mean',\n","            'Spread Máximo': 'max'\n","        }).reset_index()\n","\n","        # Guardar resumen en ambas ubicaciones\n","        crypto_summary.to_csv('data/comparative/crypto_summary.csv', index=False)\n","        crypto_summary.to_csv(f\"{BASE_PATH}/Comparative/crypto_summary.csv\", index=False)\n","        print(\"Resumen por criptomoneda guardado localmente y en Google Drive\")\n","\n","        # Visualizar\n","        fig5 = make_subplots(\n","            rows=2, cols=2,\n","            subplot_titles=(\n","                'Total de Oportunidades',\n","                'Porcentaje Promedio',\n","                'Spread Promedio',\n","                'Spread Máximo'\n","            )\n","        )\n","\n","        # Total de oportunidades\n","        fig5.add_trace(\n","            go.Bar(x=crypto_summary['cryptocurrency'], y=crypto_summary['Oportunidades'], name='Oportunidades'),\n","            row=1, col=1\n","        )\n","\n","        # Porcentaje promedio\n","        fig5.add_trace(\n","            go.Bar(x=crypto_summary['cryptocurrency'], y=crypto_summary['Porcentaje'], name='Porcentaje Promedio'),\n","            row=1, col=2\n","        )\n","\n","        # Spread promedio\n","        fig5.add_trace(\n","            go.Bar(x=crypto_summary['cryptocurrency'], y=crypto_summary['Spread Promedio'], name='Spread Promedio'),\n","            row=2, col=1\n","        )\n","\n","        # Spread máximo\n","        fig5.add_trace(\n","            go.Bar(x=crypto_summary['cryptocurrency'], y=crypto_summary['Spread Máximo'], name='Spread Máximo'),\n","            row=2, col=2\n","        )\n","\n","        fig5.update_layout(\n","            title='Resumen de Métricas por Criptomoneda',\n","            showlegend=False,\n","            height=800\n","        )\n","\n","        # Guardar en ambas ubicaciones\n","        fig5.write_html('visualizations/comparative/crypto_summary.html')\n","        fig5.write_html(f\"{drive_vis_dir}/crypto_summary.html\")\n","        print(\"Visualización 5 guardada localmente y en Google Drive\")\n","    except Exception as e:\n","        print(f\"Error al generar resumen por criptomoneda: {e}\")"],"metadata":{"id":"cNxVA9U-HnzP","executionInfo":{"status":"ok","timestamp":1744832753150,"user_tz":360,"elapsed":8,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# 4. Análisis de los mejores pares por criptomoneda\n","def analyze_best_pairs(combined_summary):\n","    \"\"\"Identifica los mejores pares de exchanges para cada criptomoneda\"\"\"\n","    if combined_summary is None or len(combined_summary) == 0:\n","        print(\"No hay datos para analizar\")\n","        return\n","\n","    print(\"\\nAnálisis de mejores pares por criptomoneda:\")\n","\n","    # Para cada criptomoneda, encontrar el mejor par según diferentes métricas\n","    cryptos = combined_summary['cryptocurrency'].unique()\n","\n","    result_rows = []\n","\n","    for crypto in cryptos:\n","        crypto_data = combined_summary[combined_summary['cryptocurrency'] == crypto]\n","\n","        try:\n","            # Mejor par por número de oportunidades\n","            best_by_opps = crypto_data.loc[crypto_data['Oportunidades'].idxmax()]\n","            print(f\"\\n{crypto} - Mejor par por oportunidades:\")\n","            print(f\"  {best_by_opps['Par']}: {best_by_opps['Oportunidades']} oportunidades ({best_by_opps['Porcentaje']:.2f}%)\")\n","\n","            # Mejor par por porcentaje de tiempo\n","            best_by_pct = crypto_data.loc[crypto_data['Porcentaje'].idxmax()]\n","            print(f\"{crypto} - Mejor par por porcentaje de tiempo:\")\n","            print(f\"  {best_by_pct['Par']}: {best_by_pct['Porcentaje']:.2f}% del tiempo\")\n","\n","            # Mejor par por spread promedio (absoluto)\n","            best_by_avg_spread = crypto_data.loc[crypto_data['Spread Promedio'].abs().idxmax()]\n","            print(f\"{crypto} - Par con mayor spread promedio absoluto:\")\n","            print(f\"  {best_by_avg_spread['Par']}: {best_by_avg_spread['Spread Promedio']:.4f}%\")\n","\n","            # Mejor par por spread máximo\n","            best_by_max_spread = crypto_data.loc[crypto_data['Spread Máximo'].idxmax()]\n","            print(f\"{crypto} - Par con mayor spread máximo:\")\n","            print(f\"  {best_by_max_spread['Par']}: {best_by_max_spread['Spread Máximo']:.4f}%\")\n","\n","            # Añadir a los resultados\n","            result_rows.append({\n","                'cryptocurrency': crypto,\n","                'best_pair_by_opportunities': best_by_opps['Par'],\n","                'max_opportunities': best_by_opps['Oportunidades'],\n","                'max_percentage': best_by_pct['Porcentaje'],\n","                'best_pair_by_avg_spread': best_by_avg_spread['Par'],\n","                'max_avg_spread': best_by_avg_spread['Spread Promedio'],\n","                'best_pair_by_max_spread': best_by_max_spread['Par'],\n","                'absolute_max_spread': best_by_max_spread['Spread Máximo']\n","            })\n","        except Exception as e:\n","            print(f\"Error al analizar mejores pares para {crypto}: {e}\")\n","\n","    if result_rows:\n","        # Crear DataFrame de resultados\n","        best_pairs_df = pd.DataFrame(result_rows)\n","\n","        # Guardar resultados en ambas ubicaciones\n","        best_pairs_df.to_csv('data/comparative/best_pairs_by_crypto.csv', index=False)\n","        best_pairs_df.to_csv(f\"{BASE_PATH}/Comparative/best_pairs_by_crypto.csv\", index=False)\n","        print(\"\\nMejores pares por criptomoneda guardados localmente y en Google Drive\")\n","\n","        return best_pairs_df\n","    else:\n","        print(\"No se pudieron determinar los mejores pares\")\n","        return None"],"metadata":{"id":"9HeFoeuIHrr2","executionInfo":{"status":"ok","timestamp":1744832757296,"user_tz":360,"elapsed":10,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# 5. Análisis de correlación entre métricas\n","def analyze_correlations(combined_summary):\n","    \"\"\"Analiza las correlaciones entre diferentes métricas\"\"\"\n","    if combined_summary is None or len(combined_summary) == 0:\n","        print(\"No hay datos para analizar correlaciones\")\n","        return\n","\n","    print(\"\\nAnalizando correlaciones entre métricas:\")\n","\n","    # Seleccionar columnas numéricas\n","    numeric_cols = ['Oportunidades', 'Porcentaje', 'Spread Promedio', 'Spread Máximo']\n","\n","    # Verificar que todas las columnas existen\n","    missing_cols = [col for col in numeric_cols if col not in combined_summary.columns]\n","    if missing_cols:\n","        print(f\"Faltan columnas para el análisis de correlación: {missing_cols}\")\n","        print(f\"Columnas disponibles: {combined_summary.columns.tolist()}\")\n","        return\n","\n","    corr_matrices = {}\n","\n","    # Calcular correlación general\n","    overall_corr = combined_summary[numeric_cols].corr()\n","    corr_matrices['Overall'] = overall_corr\n","\n","    print(\"Correlación general entre métricas:\")\n","    print(overall_corr)\n","\n","    # Calcular correlación por criptomoneda\n","    for crypto in combined_summary['cryptocurrency'].unique():\n","        crypto_data = combined_summary[combined_summary['cryptocurrency'] == crypto]\n","        if len(crypto_data) > 1:  # Necesitamos al menos 2 filas para calcular correlación\n","            crypto_corr = crypto_data[numeric_cols].corr()\n","            corr_matrices[crypto] = crypto_corr\n","\n","            print(f\"\\nCorrelación para {crypto}:\")\n","            print(crypto_corr)\n","\n","    # Visualizar matriz de correlación general\n","    try:\n","        fig = px.imshow(\n","            overall_corr,\n","            text_auto=True,\n","            title='Correlación entre Métricas de Arbitraje',\n","            color_continuous_scale='RdBu_r',\n","            zmin=-1, zmax=1\n","        )\n","\n","        # Guardar en ambas ubicaciones\n","        fig.write_html('visualizations/comparative/correlation_matrix.html')\n","        fig.write_html(f\"{BASE_PATH}/Comparative/Visualizations/correlation_matrix.html\")\n","        print(\"\\nMatriz de correlación guardada localmente y en Google Drive\")\n","    except Exception as e:\n","        print(f\"Error al generar matriz de correlación: {e}\")\n","\n","    return corr_matrices"],"metadata":{"id":"hgH2jclJHuxm","executionInfo":{"status":"ok","timestamp":1744832759531,"user_tz":360,"elapsed":6,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# Función para verificar la estructura de los archivos de arbitraje\n","def check_arbitrage_files():\n","    \"\"\"Verifica la estructura de los archivos de arbitraje para cada criptomoneda\"\"\"\n","    cryptos = ['BTC', 'ETH', 'XRP']\n","\n","    for crypto in cryptos:\n","        csv_path = f\"{BASE_PATH}/{crypto}/{crypto}_csv\"\n","        vis_path = f\"{BASE_PATH}/{crypto}/{crypto}_visualizations\"\n","\n","        print(f\"\\nVerificando archivos para {crypto}:\")\n","\n","        # Verificar que las carpetas existen\n","        if not os.path.exists(csv_path):\n","            print(f\"¡La carpeta {csv_path} no existe!\")\n","        else:\n","            print(f\"Carpeta CSV encontrada: {csv_path}\")\n","            # Listar archivos CSV\n","            csv_files = [f for f in os.listdir(csv_path) if f.endswith('.csv')]\n","            print(f\"Archivos CSV encontrados ({len(csv_files)}):\")\n","            for file in csv_files:\n","                size = os.path.getsize(os.path.join(csv_path, file)) / (1024 * 1024)  # Tamaño en MB\n","                print(f\"  - {file} ({size:.2f} MB)\")\n","\n","        if not os.path.exists(vis_path):\n","            print(f\"¡La carpeta {vis_path} no existe!\")\n","        else:\n","            print(f\"Carpeta de visualizaciones encontrada: {vis_path}\")\n","            # Listar archivos HTML\n","            html_files = [f for f in os.listdir(vis_path) if f.endswith('.html')]\n","            print(f\"Visualizaciones encontradas ({len(html_files)}):\")\n","            for file in html_files:\n","                print(f\"  - {file}\")"],"metadata":{"id":"UhzbQa9XHxGX","executionInfo":{"status":"ok","timestamp":1744832761635,"user_tz":360,"elapsed":7,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# Ejecutar la verificación de archivos\n","print(\"Verificando estructura de archivos...\")\n","check_arbitrage_files()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"76sHk90sHzg1","executionInfo":{"status":"ok","timestamp":1744832764999,"user_tz":360,"elapsed":1007,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}},"outputId":"5ce0e498-312d-4b2d-e557-8d5069dd277b"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Verificando estructura de archivos...\n","\n","Verificando archivos para BTC:\n","Carpeta CSV encontrada: /content/drive/My Drive/Cripto/Proyecto_Exchange/Blockchain/BTC/BTC_csv\n","Archivos CSV encontrados (4):\n","  - btc_arbitrage.csv (177.82 MB)\n","  - btc_arbitrage_summary.csv (0.00 MB)\n","  - btc_clean.csv (648.63 MB)\n","  - btc_synchronized.csv (183.95 MB)\n","Carpeta de visualizaciones encontrada: /content/drive/My Drive/Cripto/Proyecto_Exchange/Blockchain/BTC/BTC_visualizations\n","Visualizaciones encontradas (2):\n","  - btc_arbitrage_opportunities.html\n","  - btc_price_comparison.html\n","\n","Verificando archivos para ETH:\n","Carpeta CSV encontrada: /content/drive/My Drive/Cripto/Proyecto_Exchange/Blockchain/ETH/ETH_csv\n","Archivos CSV encontrados (4):\n","  - eth_arbitrage.csv (128.08 MB)\n","  - eth_arbitrage_summary.csv (0.00 MB)\n","  - eth_synchronized.csv (114.91 MB)\n","  - eth_clean.csv (620.38 MB)\n","Carpeta de visualizaciones encontrada: /content/drive/My Drive/Cripto/Proyecto_Exchange/Blockchain/ETH/ETH_visualizations\n","Visualizaciones encontradas (2):\n","  - eth_arbitrage_opportunities.html\n","  - eth_price_comparison.html\n","\n","Verificando archivos para XRP:\n","Carpeta CSV encontrada: /content/drive/My Drive/Cripto/Proyecto_Exchange/Blockchain/XRP/XRP_csv\n","Archivos CSV encontrados (4):\n","  - xrp_arbitrage.csv (128.86 MB)\n","  - xrp_arbitrage_summary.csv (0.00 MB)\n","  - xrp_clean.csv (619.16 MB)\n","  - xrp_synchronized.csv (107.08 MB)\n","Carpeta de visualizaciones encontrada: /content/drive/My Drive/Cripto/Proyecto_Exchange/Blockchain/XRP/XRP_visualizations\n","Visualizaciones encontradas (2):\n","  - xrp_arbitrage_opportunities.html\n","  - xrp_price_comparison.html\n"]}]},{"cell_type":"code","source":["# Ejecutar el análisis completo\n","print(\"\\nCargando resúmenes de arbitraje...\")\n","summaries = load_arbitrage_summaries()\n","combined_summary = create_comparative_summary(summaries)\n","generate_comparative_visualizations(combined_summary)\n","best_pairs = analyze_best_pairs(combined_summary)\n","correlation_matrices = analyze_correlations(combined_summary)\n","\n","print(\"\\nAnálisis comparativo completado.\")\n","print(f\"Los resultados se han guardado en carpetas locales y en Google Drive en {BASE_PATH}/Comparative/\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JDgOlkkuH1K9","executionInfo":{"status":"ok","timestamp":1744832777205,"user_tz":360,"elapsed":4336,"user":{"displayName":"Jonathan Ayala","userId":"05013033828997019963"}},"outputId":"85345818-00fb-4392-da81-3e0c4d2f121e"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Cargando resúmenes de arbitraje...\n","Resumen de BTC cargado: 3 pares de exchanges\n","Resumen de ETH cargado: 6 pares de exchanges\n","Resumen de XRP cargado: 6 pares de exchanges\n","Columnas en resumen 1: ['Par', 'Oportunidades', 'Porcentaje', 'Spread Promedio', 'Spread Máximo', 'cryptocurrency']\n","Columnas en resumen 2: ['Par', 'Oportunidades', 'Porcentaje', 'Spread Promedio', 'Spread Máximo', 'cryptocurrency']\n","Columnas en resumen 3: ['Par', 'Oportunidades', 'Porcentaje', 'Spread Promedio', 'Spread Máximo', 'cryptocurrency']\n","Resumen comparativo creado con 15 filas\n","Resumen comparativo guardado en 'data/comparative/combined_arbitrage_summary.csv'\n","Resumen comparativo guardado en Google Drive: /content/drive/My Drive/Cripto/Proyecto_Exchange/Blockchain/Comparative/combined_arbitrage_summary.csv\n","Generando visualizaciones comparativas...\n","Visualización 1 guardada localmente y en Google Drive\n","Visualización 2 guardada localmente y en Google Drive\n","Visualización 3 guardada localmente y en Google Drive\n","Visualización 4 guardada localmente y en Google Drive\n","Resumen por criptomoneda guardado localmente y en Google Drive\n","Visualización 5 guardada localmente y en Google Drive\n","\n","Análisis de mejores pares por criptomoneda:\n","\n","BTC - Mejor par por oportunidades:\n","  Kucoin-OKX: 251866 oportunidades (25.05%)\n","BTC - Mejor par por porcentaje de tiempo:\n","  Kucoin-OKX: 25.05% del tiempo\n","BTC - Par con mayor spread promedio absoluto:\n","  Binance-Kucoin: -10.1115%\n","BTC - Par con mayor spread máximo:\n","  Binance-OKX: 48.5096%\n","\n","ETH - Mejor par por oportunidades:\n","  Coinbase-Kucoin: 121876 oportunidades (28.63%)\n","ETH - Mejor par por porcentaje de tiempo:\n","  Coinbase-Kucoin: 28.63% del tiempo\n","ETH - Par con mayor spread promedio absoluto:\n","  Coinbase-Kucoin: -0.2597%\n","ETH - Par con mayor spread máximo:\n","  Coinbase-Kucoin: 13.5229%\n","\n","XRP - Mejor par por oportunidades:\n","  Coinbase-Kucoin: 86098 oportunidades (21.21%)\n","XRP - Mejor par por porcentaje de tiempo:\n","  Coinbase-Kucoin: 21.21% del tiempo\n","XRP - Par con mayor spread promedio absoluto:\n","  Coinbase-OKX: 0.0240%\n","XRP - Par con mayor spread máximo:\n","  Coinbase-OKX: 8.3186%\n","\n","Mejores pares por criptomoneda guardados localmente y en Google Drive\n","\n","Analizando correlaciones entre métricas:\n","Correlación general entre métricas:\n","                 Oportunidades  Porcentaje  Spread Promedio  Spread Máximo\n","Oportunidades         1.000000    0.781552        -0.486168       0.868393\n","Porcentaje            0.781552    1.000000        -0.230939       0.510212\n","Spread Promedio      -0.486168   -0.230939         1.000000      -0.610399\n","Spread Máximo         0.868393    0.510212        -0.610399       1.000000\n","\n","Correlación para BTC:\n","                 Oportunidades  Porcentaje  Spread Promedio  Spread Máximo\n","Oportunidades         1.000000    1.000000         0.586285      -0.947181\n","Porcentaje            1.000000    1.000000         0.586285      -0.947181\n","Spread Promedio       0.586285    0.586285         1.000000      -0.295519\n","Spread Máximo        -0.947181   -0.947181        -0.295519       1.000000\n","\n","Correlación para ETH:\n","                 Oportunidades  Porcentaje  Spread Promedio  Spread Máximo\n","Oportunidades         1.000000    1.000000        -0.317787       0.954112\n","Porcentaje            1.000000    1.000000        -0.317787       0.954112\n","Spread Promedio      -0.317787   -0.317787         1.000000      -0.379718\n","Spread Máximo         0.954112    0.954112        -0.379718       1.000000\n","\n","Correlación para XRP:\n","                 Oportunidades  Porcentaje  Spread Promedio  Spread Máximo\n","Oportunidades         1.000000    1.000000         0.202405       0.610870\n","Porcentaje            1.000000    1.000000         0.202405       0.610870\n","Spread Promedio       0.202405    0.202405         1.000000       0.527117\n","Spread Máximo         0.610870    0.610870         0.527117       1.000000\n","\n","Matriz de correlación guardada localmente y en Google Drive\n","\n","Análisis comparativo completado.\n","Los resultados se han guardado en carpetas locales y en Google Drive en /content/drive/My Drive/Cripto/Proyecto_Exchange/Blockchain/Comparative/\n"]}]}]}